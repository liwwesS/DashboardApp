<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:DashboardProjects.Converters">

    <Style
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        x:Key="RoundProgressBarStyle"
        TargetType="{x:Type ProgressBar}">

        <Style.Resources>
            <local:RoundProgressPathConverter x:Key="Conv" />
            <sys:Double x:Key="RelativeThickness">0.75</sys:Double>
            <sys:Double x:Key="Zero">0.0</sys:Double>
            <sys:Double x:Key="One">1.0</sys:Double>
            <sys:Double x:Key="IndeterminatePart">0.25</sys:Double>
            <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025" />
            <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6" />
            <SolidColorBrush x:Key="ProgressBar.Border" Color="#2f3438" />
        </Style.Resources>

        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}" />
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}" />
        <Setter Property="BorderThickness" Value="1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <Path
                            Fill="{TemplateBinding Background}"
                            Stretch="Uniform"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{TemplateBinding BorderThickness}">
                            <Path.Data>
                                <MultiBinding Converter="{StaticResource Conv}" ConverterParameter="{StaticResource RelativeThickness}">

                                    <Binding Source="{StaticResource One}" />
                                    <Binding Source="{StaticResource Zero}" />
                                    <Binding Source="{StaticResource One}" />
                                </MultiBinding>
                            </Path.Data>
                        </Path>
                        <Path
                            Name="Indicator"
                            Fill="{TemplateBinding Foreground}"
                            Stretch="Uniform">
                            <Path.Data>
                                <MultiBinding Converter="{StaticResource Conv}" ConverterParameter="{StaticResource RelativeThickness}">

                                    <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </Path.Data>
                        </Path>

                        <Path
                            Name="Animation"
                            Fill="{TemplateBinding Foreground}"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Uniform"
                            Visibility="Collapsed">
                            <Path.Data>
                                <MultiBinding Converter="{StaticResource Conv}" ConverterParameter="{StaticResource RelativeThickness}">
                                    <Binding Source="{StaticResource IndeterminatePart}" />
                                    <Binding Source="{StaticResource Zero}" />
                                    <Binding Source="{StaticResource One}" />
                                </MultiBinding>
                            </Path.Data>

                            <Path.RenderTransform>
                                <RotateTransform />
                            </Path.RenderTransform>
                        </Path>

                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontSize="18"
                            FontWeight="Bold">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Loading">
                                    <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation
                                            Storyboard.TargetName="Animation"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                            From="0"
                                            To="360"
                                            Duration="0:0:2" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="Indicator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Animation" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Background="{TemplateBinding Background}">
                        <ScrollViewer>
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#25292E" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#25292E" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border>
                        <ContentPresenter
                            Margin="0,3,10,5"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#595959" />
        <Setter Property="FontSize" Value="11" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard TargetProperty="Foreground.Color">
                            <ColorAnimation
                                From="#FFFFFF"
                                To="#D9D9D9"
                                Duration="0:0:0.6" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Setter Property="Foreground" Value="#D9D9D9" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Background" Value="Transparent" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FFFFFF" />
                <Setter Property="Background" Value="Transparent" />
            </Trigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=IsEnabled}" Value="False">
                <Setter Property="Foreground" Value="#595959" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="30" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="bd"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">

                        <Path
                            Name="ico"
                            Width="25"
                            Height="25"
                            Data="{TemplateBinding Content}"
                            Fill="#FFFFFF"
                            Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#434344" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Tag" Value="IsCloseButton" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#F72626" />
                            <Setter TargetName="ico" Property="Fill" Value="#FFFFFF" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Tag" Value="IsJustButton" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="#FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="bd"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">

                        <Path
                            Name="ico"
                            Width="10"
                            Height="10"
                            Data="{TemplateBinding Content}"
                            Fill="#FFFFFF"
                            Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#434344" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Tag" Value="IsCloseButton" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#F72626" />
                            <Setter TargetName="ico" Property="Fill" Value="#FFFFFF" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="#FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#9d9ea3" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Height" Value="60" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border
                        x:Name="menuButton"
                        Background="{TemplateBinding Background}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <Grid Width="80">
                            <!--  Selected  -->
                            <Border
                                x:Name="btnSelected"
                                Width="80"
                                HorizontalAlignment="Center"
                                CornerRadius="5" />

                            <!--  Icon  -->
                            <Path
                                x:Name="Icon"
                                Width="25"
                                Height="25"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}"
                                Fill="#9d9ea3"
                                Stretch="Uniform" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="#ffffff" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="#ffffff" />
                            <Setter TargetName="btnSelected" Property="Background" Value="#1d2335" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>