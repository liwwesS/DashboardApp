<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:local="clr-namespace:DashboardProjects.Converters">

    <Style x:Key="RoundProgressBarStyle" TargetType="{x:Type ProgressBar}"
           xmlns:sys="clr-namespace:System;assembly=mscorlib">
        
        <Style.Resources>
            <local:RoundProgressPathConverter x:Key="Conv"/>
            <sys:Double x:Key="RelativeThickness">0.75</sys:Double>
            <sys:Double x:Key="Zero">0.0</sys:Double>
            <sys:Double x:Key="One">1.0</sys:Double>
            <sys:Double x:Key="IndeterminatePart">0.25</sys:Double>
            <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025"/>
            <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
            <SolidColorBrush x:Key="ProgressBar.Border" Color="#2f3438"/>
        </Style.Resources>
        
        <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
        <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation 
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                        Storyboard.TargetName="Animation"
                                        From="0" To="360" Duration="0:0:2"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Path Fill="{TemplateBinding Background}" Stretch="Uniform"
                          Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}">
                            <Path.Data>
                                <MultiBinding Converter="{StaticResource Conv}"
                                              ConverterParameter="{StaticResource RelativeThickness}">
                                    
                                    <Binding Source="{StaticResource One}"/>
                                    <Binding Source="{StaticResource Zero}"/>
                                    <Binding Source="{StaticResource One}"/>
                                </MultiBinding>
                            </Path.Data>
                        </Path>
                        <Path Fill="{TemplateBinding Foreground}" Stretch="Uniform" Name="Indicator">
                            <Path.Data>
                                <MultiBinding Converter="{StaticResource Conv}"
                                              ConverterParameter="{StaticResource RelativeThickness}">
                                    
                                    <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </Path.Data>
                        </Path>

                        <Path Fill="{TemplateBinding Foreground}" Stretch="Uniform" Name="Animation"
                              Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                            <Path.Data>
                                <MultiBinding Converter="{StaticResource Conv}"
                                              ConverterParameter="{StaticResource RelativeThickness}">
                                    <Binding Source="{StaticResource IndeterminatePart}"/>
                                    <Binding Source="{StaticResource Zero}"/>
                                    <Binding Source="{StaticResource One}"/>
                                </MultiBinding>
                            </Path.Data>

                            <Path.RenderTransform>
                                <RotateTransform/>
                            </Path.RenderTransform>
                        </Path>
                        
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                                   FontWeight="Bold" FontSize="18">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Loading">
                                    <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="Animation" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Background="{TemplateBinding Background}">
                        <ScrollViewer>
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#25292E"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#25292E"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border>
                        <ContentPresenter HorizontalAlignment="Left" 
                                          VerticalAlignment="Center"
                                          Margin="0 3 10 5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" 
                Value="#595959"/>
        <Setter Property="FontSize" 
                Value="11"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" 
                     Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard TargetProperty="Foreground.Color">
                            <ColorAnimation From="#FFFFFF" 
                                            To="#D9D9D9" 
                                            Duration="0:0:0.6" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Setter Property="Foreground" 
                        Value="#D9D9D9"/>
                <Setter Property="FontWeight" 
                        Value="Bold"/>
                <Setter Property="Background" 
                        Value="Transparent"/>
            </Trigger>

            <Trigger Property="IsMouseOver" 
                     Value="True">
                <Setter Property="Foreground" 
                        Value="#FFFFFF"/>
                <Setter Property="Background" 
                        Value="Transparent"/>
            </Trigger>

            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBox}, Path=IsEnabled}" Value="False">
                <Setter Property="Foreground" Value="#595959"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IconButtonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="bd" 
                        CornerRadius="5" 
                        Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <Path Name="ico" 
                          Data="{TemplateBinding Content}" 
                          Fill="#FFFFFF" 
                          Height="25" 
                          Width="25" 
                          Stretch="Uniform"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#434344"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag" Value="IsCloseButton"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#F72626"/>
                            <Setter TargetName="ico" Property="Fill" Value="#FFFFFF"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Tag" Value="IsJustButton"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ico" Property="Fill" Value="#FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>